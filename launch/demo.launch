<launch>

    <arg name="enable_debug" default="false"/>
    <arg name="enable_ctm" default="true"/>
    <arg name="enable_octomap" default="true"/>
    <arg name="enable_marble_mapping" default="false"/>
    <arg name="enable_crop" default="true"/>

    <arg name="fixed_frame_id" default="map"/>
    <arg name="child_frame_id" default="base_link"/>
    <arg name="input_cloud_topic" default="/points"/>

    <arg name="M_PI" value="3.14159265"/>

<!-- launch curvy_terrain_mapper -->
    <include file="$(find curvy_terrain_mapper)/launch/curvy_terrain_mapper.launch" if="$(arg enable_ctm)">
        <arg name="fixed_frame_id" value="$(arg fixed_frame_id)"/>
        <arg name="input_cloud_topic" value="$(arg input_cloud_topic)"/>
        <remap from="~cost_cloud" to="$(arg input_cloud_topic)/cost_cloud"/>
        <remap from="~cost_norm_cloud" to="$(arg input_cloud_topic)/cost_norm_cloud"/>
        <arg name="enable_debug" value="$(arg enable_debug)"/>
        <arg name="costmap/normal_gain" value="4.0"/>
        <arg name="costmap/curv_gain" value="20.0"/>
        <arg name="costmap/min_saturation_cost" value="0.0"/>
        <arg name="costmap/max_saturation_cost" value="0.1"/>
        <arg name="costmap/set_min_saturation_cost_to_min_cost" value="false"/>
        <arg name="costmap/set_max_saturation_cost_to_max_cost" value="false"/>
    </include>

    <group if="$(arg enable_octomap)">
        <node pkg="octomap_server" type="octomap_server_node" name="octomap_server" output="screen" respawn="true">
            <remap from="cloud_in" to="$(arg input_cloud_topic)/cost_norm_cloud/cropped" if="$(arg enable_crop)"/>
            <remap from="cloud_in" to="$(arg input_cloud_topic)/cost_norm_cloud" unless="$(arg enable_crop)"/>
            <param name="frame_id"                value="$(arg fixed_frame_id)"/>
            <param name="base_frame_id"           value="$(arg child_frame_id)"/>
            <rosparam>
                filter_speckles: false
                filter_ground: false
                sensor_model/max_range: 20.0
                resolution: 0.2
                sensor_model/hit: 0.9
                sensor_model/miss: 0.2
                sensor_model/min: 0.12
                sensor_model/max: 0.97
                compress_map: true
            </rosparam>
        </node>

        <!-- <include file="$(find octomap_server)/launch/octomap_mapping_rough.launch" unless="$(arg enable_marble_mapping)">
            <arg name="cloud_in"                value="$(arg input_cloud_topic)/cost_norm_cloud/cropped" if="$(arg enable_crop)"/>
            <arg name="cloud_in"                value="$(arg input_cloud_topic)/cost_norm_cloud" unless="$(arg enable_crop)"/>
            <arg name="frame_id"                value="$(arg fixed_frame_id)"/>
            <arg name="base_frame_id"           value="$(arg child_frame_id)"/>
            <arg name="filter_speckles"         value="false"/>
            <arg name="filter_ground"           value="false"/>
            <arg name="sensor_model/max_range"  value="20.0"/>
            <arg name="resolution"              value="0.2"/>
            <arg name="sensor_model/hit"        value="0.9"/>
            <arg name="sensor_model/miss"       value="0.2"/>
            <arg name="sensor_model/min"        value="0.12"/>
            <arg name="sensor_model/max"        value="0.97"/>
            <arg name="compress_map"            value="true"/>
        </include> -->
        <include file="$(find marble_mapping)/launch/marble_mapping.launch" if="$(arg enable_marble_mapping)">
            <arg name="cloud_in"                value="$(arg input_cloud_topic)/cost_norm_cloud/cropped" if="$(arg enable_crop)"/>
            <arg name="cloud_in"                value="$(arg input_cloud_topic)/cost_norm_cloud" unless="$(arg enable_crop)"/>
            <arg name="frame_id"                value="$(arg fixed_frame_id)"/>
            <arg name="filter_ground"           value="false"/>
            <arg name="max_range"               value="20.0"/>
            <arg name="resolution"              value="0.2"/>
            <arg name="sensor_model/hit"        value="0.9"/>
            <arg name="sensor_model/miss"       value="0.2"/>
            <arg name="sensor_model/min"        value="0.12"/>
            <arg name="sensor_model/max"        value="0.97"/>
        </include>
    </group>

    <node pkg="nodelet" type="nodelet" name="box_filter" args="standalone pcl/CropBox" output="screen" if="$(arg enable_crop)">
      <remap from="~input" to="$(arg input_cloud_topic)/cost_norm_cloud" />
      <remap from="~output" to="$(arg input_cloud_topic)/cost_norm_cloud/cropped" />
      <param name="~input_frame" value="$(arg child_frame_id)"/>
      <param name="~output_frame" value="$(arg child_frame_id)"/>
      <rosparam>
        # true: no points in the box, false: no points outside the box
        negative: true
        min_x: -1.0
        max_x: 2.0
        min_y: -1.0
        max_y: 1.0
        min_z: -0.5
        max_z: 0.5
      </rosparam>
    </node>

    <node pkg="topic_tools" type="relay" name="cloud_relay2" args="/curvy_terrain_mapper/cost_norm_cloud /curvy_terrain_mapper/cost_norm_cloud/cropped" unless="$(arg enable_crop)"/>


</launch>